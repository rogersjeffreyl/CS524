
sets
  reservoirs /A,B/,
  months     /March, April/;

parameters
   minimum_allowable_level(reservoirs) "minimum allowable level for reservoirs"
   /   A  1200
       B   800 / ,
   storage_capacity(reservoirs) "maximum water held by reservoirs"	   
   / A  2000
     B  1500 /,
   water_power_conversion(reservoirs) "Water power conversion MWH/KAF"	    
     / A  400
       B  200 /,
   power_plant_capacity "Maximum power that can be generated by the power plant MWH/month "	    
     / A  60000
       B  35000 /,
   
   initial_levels(reservoirs) "Initial Levels "
    / A 1900
      B 850 /; 

table
   predicted_inflow(reservoirs, months) "Predicted reservoir inflow for the month"
	       March     April   	 
       A  	200        40
       B  	130        15  ;

scalars
  power_cost_1 /5.00/,
  power_cost_2 /3.50/;

positive variables
  inflow(reservoirs,months),
  outflow(reservoirs,months),
  spill(reservoirs,months),
  reservoir_level(reservoirs,months),
  power_lt_50k(months),
  power_gt_50k(months);


free variable revenue "revenue due to power generation";
equations
  reservoir_a_capacity_lt(months),
  reservoir_a_capacity_gt(months),
  reservoir_b_capacity_lt(months),
  reservoir_b_capacity_gt(months),
  capacity_constraints(reservoirs,months),
  total_power(months),
  power_constraints(months),
  revenue_eqn;

  
reservoir_a_capacity_lt(months)..
   initial_levels('A')$(ord(months)=1)+ predicted_inflow('A',months) - outflow('A',months)+ reservoir_level('A', months-1) - spill('A', months) =l= storage_capacity('A');

reservoir_a_capacity_gt(months)..
   initial_levels('A')$(ord(months)=1)+ predicted_inflow('A',months) - outflow('A',months)+ reservoir_level('A', months-1) - spill('A', months) =g= minimum_allowable_level('A');

reservoir_b_capacity_lt(months)..
   initial_levels('B')$(ord(months)=1)+ predicted_inflow('B',months) - outflow('B',months)+ reservoir_level('B', months-1) - spill('B', months)+ spill('A', months) + outflow('A',months) =l= storage_capacity('B');

reservoir_b_capacity_gt(months)..
  initial_levels('B')$(ord(months)=1)+ predicted_inflow('B',months) - outflow('B',months)+ reservoir_level('B', months-1) - spill('B', months)+ spill('A', months) + outflow('A',months) =g= minimum_allowable_level('B');

capacity_constraints(reservoirs,months)..
  water_power_conversion(reservoirs) * outflow(reservoirs,months) =l= power_plant_capacity(reservoirs);

power_constraints(months)..
  power_lt_50k(months) =l=50000;

total_power(months)..
  power_lt_50k(months) + power_gt_50k(months) =e= sum ((reservoirs), outflow(reservoirs,months) * water_power_conversion(reservoirs));

revenue_eqn..
  revenue  =e= sum((months),power_lt_50k(months) * power_cost_1 + power_cost_2 * power_gt_50k(months) );

model power_plant_revenue /all/;
solve power_plant_revenue using lp maximizing revenue;
display revenue.L;
